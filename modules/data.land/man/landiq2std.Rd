% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/landiq2std.R
\name{landiq2std}
\alias{landiq2std}
\title{Convert a LandIQ Shapefile into a Standardized Format consisting of
a GeoPackage file to store geospatial information and an associated
CSV file with attributes}
\usage{
landiq2std(input_file, output_gpkg, output_csv)
}
\arguments{
\item{input_file}{Character. Path to the input Shapefile
(GeoPackage created by shp2gpkg is also valid)}

\item{output_gpkg}{Character. Path to the output GeoPackage}

\item{output_csv}{Character. Path to the output CSV.}
}
\value{
Invisibly returns a list with paths to the output files.
}
\description{
This function reads a LandIQ crop map shapefile downloaded from
https://data.cnra.ca.gov/dataset/statewide-crop-mapping and processes the data into
a standardized GeoPackage and CSV format.
}
\details{
This function:
- Reads a Shapefile using the `sf` package.
- Calculates centroids to extract latitude and longitude.
- Converts `Acres` column to hectares (`ha`).
- Extracts crop information and assigns a PFT (Plant Functional Type).
- Outputs a standardized GeoPackage with columns `id`, `geometry`, `lat`, `lon`, and `area_ha`.
- Outputs a CSV with columns `year`, `crop`, `pft`, `source`, and `notes`.

Note: TODO provide crop-->PFT mapping as an external file using either
defaults stored with the PEcAn.data.land package or an optional custom
mapping
}
\examples{
# Specify input and output file paths
input_file <- "path/to/landiq.shp"
output_gpkg <- "path/to/your_output.gpkg"
output_csv <- "path/to/your_output.csv"

# Run the conversion function
landiq2std(input_file, output_gpkg, output_csv)

}
