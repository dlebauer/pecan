% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setEnsemblePaths.R
\name{setEnsemblePaths}
\alias{setEnsemblePaths}
\title{Set paths to input file ensembles using a consistent pattern across sites}
\usage{
setEnsemblePaths(
  settings,
  n_reps,
  input_type = c("met", "poolinitcond", "soilinitcond"),
  path_template = "./{id}/{n}.nc",
  ...
)
}
\arguments{
\item{settings}{a PEcAn MultiSettings object}

\item{n_reps}{number of replicates to insert for each path.}

\item{input_type}{subsection of the \code{inputs} settings to be edited}

\item{path_template}{format for the paths to be inserted, as a \code{glue} string.}

\item{...}{additional variables to be interpolated into \code{path_template}}
}
\value{
updated settings object
}
\description{
Propagates a filename pattern into the relevant paths of a multi-site
settings. For example if your files are named like "mymet/siteA/scenario1.nc"
up through "mymet/siteZ/scenario50.nc",
\code{setEnsemblePaths(settings, n_reps = 50, "mymet/{id}/scenario{n}.nc")} will
add them all to your settings in one shot.
}
\details{
Operates on one input section (met, poolinitcond, etc) at a time because
it's common to have different path conventions for met vs IC.

The path template should be a string recognized by \code{glue::glue()},
with curly braces wrapping any expressions to be interpolated.
\code{{n}} will be replaced with each value of 1:\code{n_reps}, \code{{id}} will be
replaced with the siteid of each site, and any other variables need to be
passed as named arguments in \code{...}.

Note that for consistency, every site in \code{settings} must contain an
element named \verb{inputs$<input_type>} before you call this.
If \verb{inputs$<input_type>$path} does not exist it will be created;
if it does exist it will be overwritten.
}
\examples{
s <- as.Settings(list(
  run = list(
    start.date = "TBD",
    site = list(),
    inputs = list(
      met = list(),
      poolinitcond = list()
    )
  )
))
m <- createMultiSiteSettings(s, c("a1", "b2"))
m1 <- setEnsemblePaths(m, 2)
m1$run$site.a1$inputs
m2 <- setEnsemblePaths(
  m, 2, "poolinitcond",
  icdir = "some/long/path",
  path_template = "{icdir}/{id}/{n}.nc"
)
m2$run$site.a1$inputs
}
